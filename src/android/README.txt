Project Prerequisites:
---------------------
- Java SDK 1.7 or later.
- Android SDK with Android 4.4 (API Level 19) and Android Build Tools 19.1.0 installed (they both can be installed from the SDK Manager).
- Android plugin for Gradle version 0.12.2.

Steps to build this project:
----------------------------

1- Using Android Studio, you must run Android Studio with 0.8.6 as minimum version. Open "File" menu and select "Import Project" option.

2- Using Gradle from the command line open a terminal window and navigate to the project root. On Windows platforms, type this command:

  > gradlew.bat assembleDebug

On Mac OS and Linux platforms, type these commands:

  $ chmod +x gradlew
  $ ./gradlew assembleDebug

The first command (chmod) adds the execution permission to the Gradle wrapper script and is only necessary the first time you build this project from the command line.

The assembleDebug build task builds the debug version of your app and signs it with the default local certificate, so that you can install it on the emulator and on real devices for debugging purposes.

After you build the project, the output APK for the app module is located in app/build/apk/, and the output AAR for the lib module is located in lib/build/libs/.


Project Structure:
-----------------

- Module "app": the source code of our application, it contains all the files generated by radarconline.com and it's the place where you can extend the app's functionality.

- Module "appworks-fw": a framework library for our app, it contains all the common code and utility classes. If you need to modify the framework see the next chapter in this README.

- Module "RssReader": auxiliary library for digest RSS content.


Modifying the Project:
---------------------
Both auxiliary libraries are compiled and included in app's libs folder, located at "app/libs/". But, it's a manual process, so if you need to change these libraries you need follow these steps:

1- Go to "settings.gradle" file of our project and uncomment the two last lines for include the libraries source in the project.

2- Once you have performed the changes you must recompile the libraries. We included a Gradle task to easily make the process, so go to "Gradle Tasks" menu and execute "buildDeps". This task will recompile the libraries and copy them to the libs folder in the app.


External libraries:
------------------
Your application have been created using Open Source software. Please double-check the source code of the application to determine which open source files are in your application and then comply with any license requirements.
For more information on open source licenses used by Radarc Online, review the following:

	Square Otto 
	(http://square.github.io/otto/)    
   
	Square Picasso 		
	(http://square.github.io/picasso/)
	
	Square Retrofit
	(http://square.github.io/retrofit/)

	PagerSlidingTabStrip
	(https://github.com/astuetz/PagerSlidingTabStrip)

	Html-TextView
	(https://github.com/dschuermann/html-textview)

	Android Better Pickers
	(https://github.com/derekbrameyer/android-betterpickers)